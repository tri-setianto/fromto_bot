import groovy.xml.MarkupBuilder
import org.jooq.util.GenerationTool
import javax.xml.bind.JAXB

buildscript {
	ext {
		kotlinVersion = '1.1.51'
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
    mavenLocal()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath 'mysql:mysql-connector-java:5.1.44'
//    classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
    classpath 'org.jooq:jooq-codegen:3.9.6'
    // classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.0.3"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'nu.studer.jooq'
// apply plugin: "org.flywaydb.flyway"

group = 'com.deco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenLocal()
	mavenCentral()
}

springBoot {
  mainClass = "com.deco.transbot.TransbotApplication"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile ('org.json:json:20170516')
  compile ('org.telegram:telegrambots:3.4')
  compile ('mysql:mysql-connector-java:5.1.44')
	runtime('mysql:mysql-connector-java')
  // compile('org.flywaydb:flyway-core:4.0.3')
  compile('org.hibernate:hibernate-validator:5.2.4.Final')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

def writer = new StringWriter()
def xml = new MarkupBuilder(writer)
  .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.9.2.xsd') {
  jdbc() {
    driver('com.mysql.jdbc.Driver')
    url('jdbc:mysql://localhost:3306/transbot')
    user('root')
    password('')
    database('transbot')
    schema('transbot')
  }
  generator() {
    database() {
      "transbot"
    }

    // Watch out for this caveat when using MarkupBuilder with "reserved names"
    // - https://github.com/jOOQ/jOOQ/issues/4797
    // - http://stackoverflow.com/a/11389034/521799
    // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
    generate([:]) {
      pojos true
      daos true
    }
    target() {
      packageName('com.deco.transbot.jooq')
      directory('src/main/java')
    }
  }
}

// Run the code generator
// ----------------------
GenerationTool.generate(
  JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
)

//flyway {
//  url = 'jdbc:mysql://localhost:3306/transbot'
//  user = 'root'
//  password = ''
//  schemas = ['transbot']
//  locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
//}

/*generateCsmartJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean*/

